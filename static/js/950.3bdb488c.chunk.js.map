{"version":3,"file":"static/js/950.3bdb488c.chunk.js","mappings":"qNAEaA,E,QAAUC,GAAAA,IAAH,4B,SCoFpB,MA/EA,WACE,OAAuCC,EAAAA,EAAAA,UAAS,GAAhD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAgBC,EAAAA,EAAAA,cAAY,SAACC,GACjCH,EAAeG,KACd,IAEGC,GAAmBF,EAAAA,EAAAA,cAAY,SAACG,GACpC,OAAIA,IAASC,EAAAA,GAAAA,MAAyBC,EAAAA,EAAAA,cAClCF,IAASC,EAAAA,GAAAA,QAA2BC,EAAAA,EAAAA,gBACpCF,IAASC,EAAAA,GAAAA,IAAuBC,EAAAA,EAAAA,YAChCF,IAASC,EAAAA,GAAAA,QAA2BC,EAAAA,EAAAA,gBACjCA,EAAAA,EAAAA,sBACN,IAEGC,GAAcN,EAAAA,EAAAA,cAAY,SAACG,GAC/B,OAAIA,IAASC,EAAAA,GAAAA,MAAyBG,EAAAA,GAAAA,GAAAA,MAClCJ,IAASC,EAAAA,GAAAA,QAA2BG,EAAAA,GAAAA,GAAAA,QACpCJ,IAASC,EAAAA,GAAAA,IAAuBG,EAAAA,GAAAA,GAAAA,IAChCJ,IAASC,EAAAA,GAAAA,QAA2BG,EAAAA,GAAAA,GAAAA,QACjCA,EAAAA,GAAAA,GAAAA,cACN,IAMH,OAJAC,EAAAA,EAAAA,YAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,KAGD,UAAC,EAAD,YACE,SAAC,KAAD,CAAQP,KAAMC,EAAAA,GAAAA,MACd,SAAC,KAAD,CAEED,KAAMC,EAAAA,GAAAA,MACNO,MAAM,0BACNC,UAAWf,IAAiBO,EAAAA,GAAAA,MAAmBP,EAAe,EAC9DE,cAAeA,EACfQ,SAAUD,EAAYF,EAAAA,GAAAA,OACtBS,QAASX,EAAiBE,EAAAA,GAAAA,QANrBA,EAAAA,GAAAA,QAQP,SAAC,KAAD,CAEED,KAAMC,EAAAA,GAAAA,QACNO,MAAM,yBACNC,UAAWf,IAAiBO,EAAAA,GAAAA,QAAqBP,EAAe,EAChEE,cAAeA,EACfQ,SAAUD,EAAYF,EAAAA,GAAAA,SACtBS,QAASX,EAAiBE,EAAAA,GAAAA,UANrBA,EAAAA,GAAAA,UAQP,SAAC,KAAD,CAEED,KAAMC,EAAAA,GAAAA,IACNO,MAAM,sBACNC,UAAWf,IAAiBO,EAAAA,GAAAA,IAAiBP,EAAe,EAC5DE,cAAeA,EACfQ,SAAUD,EAAYF,EAAAA,GAAAA,KACtBS,QAASX,EAAiBE,EAAAA,GAAAA,MANrBA,EAAAA,GAAAA,MAQP,SAAC,KAAD,CAEED,KAAMC,EAAAA,GAAAA,QACNO,MAAM,wBACNC,UAAWf,IAAiBO,EAAAA,GAAAA,QAAqBP,EAAe,EAChEE,cAAeA,EACfQ,SAAUD,EAAYF,EAAAA,GAAAA,SACtBS,QAASX,EAAiBE,EAAAA,GAAAA,UANrBA,EAAAA,GAAAA,UAQP,SAAC,KAAD,CAEED,KAAMC,EAAAA,GAAAA,YACNO,MAAM,sBACNC,UAAWf,IAAiBO,EAAAA,GAAAA,YAAyBP,EAAe,EACpEE,cAAeA,EACfQ,SAAUD,EAAYF,EAAAA,GAAAA,aACtBS,QAASX,EAAiBE,EAAAA,GAAAA,cANrBA,EAAAA,GAAAA","sources":["pages/Tv/style.ts","pages/Tv/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  \r\n`;\r\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nimport { Banner, Slider } from '../../components';\r\nimport { queryKey, TvCategory } from '../../constants';\r\nimport { api } from '../../apis';\r\nimport * as S from './style';\r\n\r\nfunction Tv() {\r\n  const [clicksSlider, setClickSlider] = useState(0);\r\n\r\n  const setSliderKind = useCallback((sliderNum: number) => {\r\n    setClickSlider(sliderNum);\r\n  }, []);\r\n\r\n  const getQueryFunction = useCallback((kind: number) => {\r\n    if (kind === TvCategory.OnAir) return api.getTvOnAirAll;\r\n    if (kind === TvCategory.Popular) return api.getTvPopularAll;\r\n    if (kind === TvCategory.Top) return api.getTvTopAll;\r\n    if (kind === TvCategory.Ranking) return api.getTvPopularAll;\r\n    return api.getTvAiringTodayAll;\r\n  }, []);\r\n\r\n  const getQueryKey = useCallback((kind: number) => {\r\n    if (kind === TvCategory.OnAir) return queryKey.tv.onAir;\r\n    if (kind === TvCategory.Popular) return queryKey.tv.popular;\r\n    if (kind === TvCategory.Top) return queryKey.tv.top;\r\n    if (kind === TvCategory.Ranking) return queryKey.tv.popular;\r\n    return queryKey.tv.airingToday;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <Banner kind={TvCategory.Tv} />\r\n      <Slider\r\n        key={TvCategory.OnAir}\r\n        kind={TvCategory.OnAir}\r\n        title='Series Currently Airing'\r\n        getSlider={clicksSlider === TvCategory.OnAir ? clicksSlider : 0}\r\n        setSliderKind={setSliderKind}\r\n        queryKey={getQueryKey(TvCategory.OnAir)}\r\n        queryFn={getQueryFunction(TvCategory.OnAir)}\r\n      />\r\n      <Slider\r\n        key={TvCategory.Ranking}\r\n        kind={TvCategory.Ranking}\r\n        title='Top 10 Series in Today'\r\n        getSlider={clicksSlider === TvCategory.Ranking ? clicksSlider : 0}\r\n        setSliderKind={setSliderKind}\r\n        queryKey={getQueryKey(TvCategory.Ranking)}\r\n        queryFn={getQueryFunction(TvCategory.Ranking)}\r\n      />\r\n      <Slider\r\n        key={TvCategory.Top}\r\n        kind={TvCategory.Top}\r\n        title='Highly Rated Series'\r\n        getSlider={clicksSlider === TvCategory.Top ? clicksSlider : 0}\r\n        setSliderKind={setSliderKind}\r\n        queryKey={getQueryKey(TvCategory.Top)}\r\n        queryFn={getQueryFunction(TvCategory.Top)}\r\n      />\r\n      <Slider\r\n        key={TvCategory.Popular}\r\n        kind={TvCategory.Popular}\r\n        title='Rising Popular Series'\r\n        getSlider={clicksSlider === TvCategory.Popular ? clicksSlider : 0}\r\n        setSliderKind={setSliderKind}\r\n        queryKey={getQueryKey(TvCategory.Popular)}\r\n        queryFn={getQueryFunction(TvCategory.Popular)}\r\n      />\r\n      <Slider\r\n        key={TvCategory.AiringToday}\r\n        kind={TvCategory.AiringToday}\r\n        title='Series Airing Today'\r\n        getSlider={clicksSlider === TvCategory.AiringToday ? clicksSlider : 0}\r\n        setSliderKind={setSliderKind}\r\n        queryKey={getQueryKey(TvCategory.AiringToday)}\r\n        queryFn={getQueryFunction(TvCategory.AiringToday)}\r\n      />\r\n    </S.Wrapper>\r\n  );\r\n}\r\n\r\nexport default Tv;\r\n"],"names":["Wrapper","styled","useState","clicksSlider","setClickSlider","setSliderKind","useCallback","sliderNum","getQueryFunction","kind","TvCategory","api","getQueryKey","queryKey","useEffect","window","scrollTo","title","getSlider","queryFn"],"sourceRoot":""}